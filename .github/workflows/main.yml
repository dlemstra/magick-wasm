on:
  push:
    branches:
      - main
    tags:
      - '!*'
  pull_request:
    branches:
      - main

env:
  LATEST_NODE_VERSION: 20

name: main
jobs:
  test:
    name: Test on node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [18, 20]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Use node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - run: npm install

      - run: npm run lint

      - run: npm run update-index

      - run: npm run build

      - run: npm run test

      - run: npm run test-dist

      - run: npm run demo

      - if: matrix.node == env.LATEST_NODE_VERSION && matrix.os == 'ubuntu-latest'
        run: npm pack

      - if: matrix.node == env.LATEST_NODE_VERSION && matrix.os == 'ubuntu-latest'
        name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: imagemagick-magick-wasm
          path: ./*.tgz

  deno:
    name: Test on deno
    container:
      image: denoland/deno:latest
    runs-on: ubuntu-latest

    steps:
      - run: apt update && apt install -y curl

      - run: curl -fsSL https://deb.nodesource.com/setup_${{ env.LATEST_NODE_VERSION }}.x | bash -

      - run: apt install -y nodejs

      - uses: actions/checkout@v4

      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - run: npm install

      - run: npm run build

      - run: npm install

      - run: ./example.sh
        working-directory: deno
